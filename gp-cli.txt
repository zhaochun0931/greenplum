gpstart -m



gpstop
gpstop -r



gpstate -s
gpstate
gpstate -e
gpstate -b



database
- create
- drop
- alter


Greenplum Database provides some template databases and a default database, template1, template0, and postgres.
- template1
- template0
- postgres



tablespace
- create


schema
- create
- drop



table
- create
- drop
- alter











gpcheckperf








psql postgres

select * from gp_segment_configuration;

postgres=# select * from gp_segment_configuration;
 dbid | content | role | preferred_role | mode | status | port | hostname | address |       datadir
------+---------+------+----------------+------+--------+------+----------+---------+----------------------
    1 |      -1 | p    | p              | n    | u      | 5432 | data73   | data73  | /data/master/gpseg-1
    2 |       0 | p    | p              | s    | u      | 6000 | data73   | data73  | /data/primary/gpseg0
    4 |       0 | m    | m              | s    | u      | 7000 | data73   | data73  | /data/mirror/gpseg0
    3 |       1 | p    | p              | s    | u      | 6001 | data73   | data73  | /data/primary/gpseg1
    5 |       1 | m    | m              | s    | u      | 7001 | data73   | data73  | /data/mirror/gpseg1
(5 rows)

postgres=#





PGOPTIONS='-c gp_session_role=utility' psql -h <hostname> -p <port> postgres
set allow_system_table_mods=TRUE;
update gp_segment_configuration set status = 'u' , role  = 'p' where dbid = 2;










select gp_segment_id, count(*) from t1 group by gp_segment_id;


select oid from pg_database where datname = current_database();
SELECT oid, datname FROM pg_database WHERE datname = 'your_database';
SELECT * FROM gp_dist_random('pg_class') WHERE relname = 'your_tablename';



select relfilenode from pg_class where relname = 't1';






pg_class

pg_class is a system catalog table that stores metadata about tables, indexes, sequences, views, and other relations.






COPY (SELECT * FROM pg_class WHERE relname = 'my_table') TO '/path/to/output/pg_class_row.csv' WITH CSV HEADER;



select * from pg_database;

select * from pg_tables where tablename = 'table_test';




