In terms of physical topology, Greenplum database is a typical master segment structure, A Greenplum cluster is usually composed of a Master node, a Standby node and multiple Segment nodes, and the nodes are interconnected through a high-speed network. 


Master is the entrance of the whole database. End users connect to master to perform query. 
Standby master will provide high availability support for master. 
The segment node is a work node, and the data exists on the segment. 
Mirror segment will provide high availability support for segment.



Greenplum database
- master (primary master, standby master)
- segment (primary segment, mirror segment)
- interconnect




A segment host typically runs from two to eight Greenplum segments, depending on the CPU cores, RAM, storage, network interfaces, and workloads.



Master 和 Segment 其实都是一个单独的 PostgreSQL 数据库。每一个都有自己单独的套元数据字典，在这里， Master 节点一般也叫主节点， Segment 也叫做数据节点。

Segment 节点与 Master 节点的通信，通过千兆(或万兆)网卡组成的内部连接(InterConnect)，在同一台数据节点机器上可以放多个 Segment，不同的 Segment 节点会被赋予不同的端口，同时， Segment 之间也不断地进行着交互。为了实现高可用，每个 Segment 都有对应的备节点( Mirror Segment)，分别存在于不同的机器上。

Client 一般只能与 Master 节点进行交互， Client 将 SQL 发给 Master，然后 Master 对 SQL 进行分析后，再将其分配给所有的 Segment 进行操作，并且将汇总结果返回给客户端。







Greenplum Database uses Write-Ahead Logging (WAL) for master/standby master mirroring
- walsender
- walreceiver

In PostgreSQL, the walsender is a background process running on the primary server in a replication setup. It is responsible for sending Write-Ahead Log (WAL) data to connected standby servers or other clients that use WAL data for replication or streaming.

In PostgreSQL, the walreceiver is a process responsible for streaming Write-Ahead Logging (WAL) data from the primary server to a standby server in a replication setup.
The walreceiver fetches WAL data from the primary server and writes it to the standby server's WAL segment files. This ensures the standby server remains synchronized with the primary server by replaying the changes described in the WAL.


